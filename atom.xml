<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一个麻瓜的笔记</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaolan234.github.io/"/>
  <updated>2019-01-04T10:30:14.654Z</updated>
  <id>https://xiaolan234.github.io/</id>
  
  <author>
    <name>麻瓜</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>写一个程序判断二次方程是否满足十字交叉法</title>
    <link href="https://xiaolan234.github.io/blog/945363eb/"/>
    <id>https://xiaolan234.github.io/blog/945363eb/</id>
    <published>2019-01-04T08:22:09.000Z</published>
    <updated>2019-01-04T10:30:14.654Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="/blog/945363eb/#判断二次方程是否满足十字相乘法">判断二次方程是否满足十字相乘法</a><ul><li><a href="/blog/945363eb/#十字相乘法算法描述">十字相乘法算法描述</a></li><li><a href="/blog/945363eb/#如何把一个数分成两个数的乘积">如何把一个数分成两个数的乘积</a></li><li><a href="/blog/945363eb/#初步实现">初步实现</a></li></ul></li></ul><a id="more"></a><p><input type="button" onclick="open_closeTOC()" id="showcloseButton">&nbsp;<input type="button" value="本文链接" onclick="copyPageURL();"></p><script>    function open_closeTOC() {var id = document.querySelector(".post-body > ul"); if (id.style.display == "block") {id.style.display = "none";document.getElementById("showcloseButton").value= "展开目录";}else if (id.style.display == "none") {id.style.display = "block";document.getElementById("showcloseButton").value="折叠目录";}}(function () {document.querySelector(".post-body > ul").style.display = "none";document.getElementById("showcloseButton").value="展开目录";})();      function copyPageURL() {const input = document.createElement('input');input.setAttribute('readonly', 'readonly');input.setAttribute('value', window.location.href);document.body.appendChild(input); input.select();if (document.execCommand("copy")) {alert("已复制: " + input.value)} document.body.removeChild(input);}</script><!--end--><h1 id="判断二次方程是否满足十字相乘法"><a href="#判断二次方程是否满足十字相乘法" class="headerlink" title="判断二次方程是否满足十字相乘法"></a>判断二次方程是否满足十字相乘法</h1><p>一元二次方程:$ax^2+bx+c$</p><h2 id="十字相乘法算法描述"><a href="#十字相乘法算法描述" class="headerlink" title="十字相乘法算法描述"></a>十字相乘法算法描述</h2><p><img src="https://image-1257720033.cos.ap-shanghai.myqcloud.com/blog/myapp/mathtools/shizixiangchengfa/1.png" alt=""></p><ul><li>首先把系数a分成两个数$a_1\times a_2$的乘积形式，c分成两个数$c_1\times c_2$的乘积形式</li><li>如果$a_1\times c_2+a_1\times c_1=b$则满足十字交叉法</li><li>把公式写成$(a_1x+c_1)(a_2x+c_2)$即可</li></ul><h2 id="如何把一个数分成两个数的乘积"><a href="#如何把一个数分成两个数的乘积" class="headerlink" title="如何把一个数分成两个数的乘积"></a>如何把一个数分成两个数的乘积</h2><p>如把常系数$c$分成$c_1\times c_2$时，我可以先取$c_1=1$,则$c_2=c \div c_1$</p><h2 id="初步实现"><a href="#初步实现" class="headerlink" title="初步实现"></a>初步实现</h2><p>java代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> yiyuanercifangcheng;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// String text="ax^2+bx+c";</span></span><br><span class="line"><span class="comment">// String text = "x^2+3x-4";</span></span><br><span class="line"><span class="comment">// String text = "x^2+4x+4";</span></span><br><span class="line"><span class="comment">// String text = "x^2+10x+25";</span></span><br><span class="line"><span class="comment">// String text = "x^2-10x+25";</span></span><br><span class="line"><span class="comment">// String text = "x^2+8x+16";</span></span><br><span class="line">String text = <span class="string">"x^2-8x+16"</span>;</span><br><span class="line">System.out.println(<span class="string">"二次方程:"</span> + text);</span><br><span class="line">Pattern fun = Pattern.compile(<span class="string">"(.*?)x\\^2(.*?)x(.*?)"</span>);</span><br><span class="line">Matcher matcher = fun.matcher(text);</span><br><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span>[] c = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line"><span class="comment">// a是否已经分解</span></span><br><span class="line"><span class="keyword">boolean</span> isADiv = <span class="keyword">false</span>;</span><br><span class="line"><span class="comment">// C是否已经分解</span></span><br><span class="line"><span class="keyword">boolean</span> isCDiv = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">if</span> (matcher.matches())</span><br><span class="line">&#123;</span><br><span class="line">String astr = matcher.group(<span class="number">1</span>), bstr = matcher.group(<span class="number">2</span>),</span><br><span class="line">cstr = matcher.group(<span class="number">3</span>);</span><br><span class="line"><span class="comment">// 如果有正号则移除正号</span></span><br><span class="line">bstr = bstr.replaceAll(<span class="string">"\\+"</span>, <span class="string">""</span>);</span><br><span class="line"><span class="comment">// 如果有正号则移除正号</span></span><br><span class="line">cstr = cstr.replaceAll(<span class="string">"\\+"</span>, <span class="string">""</span>);</span><br><span class="line"><span class="comment">// 这说明系数1忽略没有写</span></span><br><span class="line"><span class="keyword">if</span> (astr == <span class="keyword">null</span> || astr.equals(<span class="string">""</span>))</span><br><span class="line">&#123;</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">a[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">a[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">isADiv = <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">a[<span class="number">0</span>] = Integer.parseInt(astr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 这说明系数1忽略没有写</span></span><br><span class="line"><span class="keyword">if</span> (bstr == <span class="keyword">null</span> || bstr.equals(<span class="string">""</span>))</span><br><span class="line">&#123;</span><br><span class="line">b = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">b = Integer.parseInt(bstr);</span><br><span class="line">&#125;</span><br><span class="line">c[<span class="number">0</span>] = Integer.parseInt(cstr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// a=1的情况</span></span><br><span class="line"><span class="keyword">if</span> (isADiv)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, first = -Math.abs(c[<span class="number">0</span>]), length = <span class="number">2</span></span><br><span class="line">* Math.abs(c[<span class="number">0</span>]); i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line">c[<span class="number">1</span>] = first++;</span><br><span class="line"><span class="comment">// 跳过分母为0的情况</span></span><br><span class="line"><span class="keyword">if</span> (c[<span class="number">1</span>] == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">c[<span class="number">2</span>] = c[<span class="number">0</span>] / c[<span class="number">1</span>];</span><br><span class="line"><span class="comment">// 判断是否能整除</span></span><br><span class="line"><span class="keyword">if</span> (c[<span class="number">1</span>] * c[<span class="number">2</span>] == c[<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(<span class="string">"可以整除: "</span> + c[<span class="number">1</span>] + <span class="string">" * "</span> + c[<span class="number">2</span>] + <span class="string">" = "</span></span><br><span class="line">+ (c[<span class="number">1</span>] * c[<span class="number">2</span>]) + <span class="string">"  ="</span> + c[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">if</span> ((a[<span class="number">1</span>] * c[<span class="number">2</span>] + a[<span class="number">2</span>] * c[<span class="number">1</span>]) == b)</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(<span class="string">",("</span> + a[<span class="number">1</span>] + <span class="string">"*"</span> + c[<span class="number">2</span>] + <span class="string">"+"</span> + a[<span class="number">2</span>]</span><br><span class="line">+ <span class="string">"*"</span> + c[<span class="number">1</span>] + <span class="string">")="</span> + b);</span><br><span class="line">System.out.print(<span class="string">",满足十字相乘法: "</span>);</span><br><span class="line">System.out.println(printResult(a, c));</span><br><span class="line"><span class="comment">// 得到结果,终止循环</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"不可整除: "</span> + c[<span class="number">1</span>] + <span class="string">" * "</span> + c[<span class="number">2</span>] + <span class="string">" = "</span></span><br><span class="line">+ (c[<span class="number">1</span>] * c[<span class="number">2</span>]) + <span class="string">" !="</span> + c[<span class="number">0</span>]);</span><br><span class="line"><span class="comment">// 跳过不能整除的情况</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拼接公式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> a x^2的系数数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> c 常数c的系数数组</span></span><br><span class="line"><span class="comment"> * return 拼接好的形如(a_1x+c_1)(a_2x+c_2)公式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">printResult</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span>[] c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">sb.append(<span class="string">"("</span>);</span><br><span class="line"><span class="comment">// 如果系数是1或者-1</span></span><br><span class="line"><span class="keyword">if</span> (Math.abs(a[<span class="number">1</span>]) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 如果是-1则显示负号</span></span><br><span class="line"><span class="keyword">if</span> (a[<span class="number">1</span>] == -<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">sb.append(<span class="string">"-"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果是+1则什么都不显示</span></span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">sb.append(a[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">sb.append(<span class="string">"x"</span>);</span><br><span class="line"><span class="keyword">if</span> (c[<span class="number">1</span>] &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(<span class="string">"+"</span>);</span><br><span class="line">sb.append(<span class="string">"+"</span>);</span><br><span class="line">&#125;</span><br><span class="line">sb.append(c[<span class="number">1</span>] + <span class="string">")("</span>);</span><br><span class="line"><span class="comment">// 如果系数是1或者-1</span></span><br><span class="line"><span class="keyword">if</span> (Math.abs(a[<span class="number">1</span>]) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 如果是-1则显示负号</span></span><br><span class="line"><span class="keyword">if</span> (a[<span class="number">1</span>] == -<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">sb.append(<span class="string">"-"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果是+1则什么都不显示</span></span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">sb.append(a[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">sb.append(<span class="string">"x"</span>);</span><br><span class="line"><span class="keyword">if</span> (c[<span class="number">2</span>] &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">sb.append(<span class="string">"+"</span>);</span><br><span class="line">&#125;</span><br><span class="line">sb.append(c[<span class="number">2</span>] + <span class="string">")"</span>);</span><br><span class="line"><span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个代码只能满足a=1的情况,a!=1的情况我还没想好怎么弄,可能需要先对A来一个循环,</p><blockquote><p>本文链接: <a href="https://lanlan234.github.io/blog/945363eb/" target="_blank" rel="noopener">写一个程序判断二次方程是否满足十字交叉法</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/blog/945363eb/#判断二次方程是否满足十字相乘法&quot;&gt;判断二次方程是否满足十字相乘法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/blog/945363eb/#十字相乘法算法描述&quot;&gt;十字相乘法算法描述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/blog/945363eb/#如何把一个数分成两个数的乘积&quot;&gt;如何把一个数分成两个数的乘积&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/blog/945363eb/#初步实现&quot;&gt;初步实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="我的工具软件" scheme="https://xiaolan234.github.io/categories/%E6%88%91%E7%9A%84%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>Latex分式通分</title>
    <link href="https://xiaolan234.github.io/blog/8160885a/"/>
    <id>https://xiaolan234.github.io/blog/8160885a/</id>
    <published>2019-01-03T06:14:31.627Z</published>
    <updated>2019-01-03T07:51:58.027Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="/blog/8160885a/#latex-分式通分算法">latex 分式通分算法</a><ul><li><a href="/blog/8160885a/#数学知识">数学知识</a></li><li><a href="/blog/8160885a/#问题描述">问题描述</a></li><li><a href="/blog/8160885a/#匹配正则">匹配正则</a></li><li><a href="/blog/8160885a/#替换正则">替换正则</a></li><li><a href="/blog/8160885a/#例子">例子</a><ul><li><a href="/blog/8160885a/#两个分式的和通分">两个分式的和通分</a></li><li><a href="/blog/8160885a/#分子带分式的情况">分子带分式的情况</a></li></ul></li></ul></li></ul><a id="more"></a><p><input type="button" onclick="open_closeTOC()" id="showcloseButton">&nbsp;<input type="button" value="本文链接" onclick="copyPageURL();"></p><script>    function open_closeTOC() {var id = document.querySelector(".post-body > ul"); if (id.style.display == "block") {id.style.display = "none";document.getElementById("showcloseButton").value= "展开目录";}else if (id.style.display == "none") {id.style.display = "block";document.getElementById("showcloseButton").value="折叠目录";}}(function () {document.querySelector(".post-body > ul").style.display = "none";document.getElementById("showcloseButton").value="展开目录";})();      function copyPageURL() {const input = document.createElement('input');input.setAttribute('readonly', 'readonly');input.setAttribute('value', window.location.href);document.body.appendChild(input); input.select();if (document.execCommand("copy")) {alert("已复制: " + input.value)} document.body.removeChild(input);}</script><!--end--><h1 id="latex-分式通分算法"><a href="#latex-分式通分算法" class="headerlink" title="latex 分式通分算法"></a>latex 分式通分算法</h1><h2 id="数学知识"><a href="#数学知识" class="headerlink" title="数学知识"></a>数学知识</h2><p>通分（reduction of fractions to a common denominator）根据分数（式）的基本性质，<strong>把几个异分母分数（式）化成与原来分数（式）相等的同分母的分数（式）的过程</strong>，叫做<strong>通分</strong></p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>有如下公式:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\dfrac&#123;x^3&#125;&#123;x^2+1&#125;-\dfrac&#123;x^2&#125;&#123;x+1&#125;</span><br></pre></td></tr></table></figure></p><p>$\dfrac{x^3}{x^2+1}-\dfrac{x^2}{x+1}$<br>要求生成通分运算后的latex公式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\dfrac&#123;(x^3)(x+1)-(x^2)(x^2+1)&#125;&#123;(x^2+1)(x+1)&#125;</span><br></pre></td></tr></table></figure></p><p>$\dfrac{(x^3)(x+1)-(x^2)(x^2+1)}{(x^2+1)(x+1)}$</p><h2 id="匹配正则"><a href="#匹配正则" class="headerlink" title="匹配正则"></a>匹配正则</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(\\d?frac)\&#123;(.+)\&#125;\&#123;(.+)\&#125;\s*(\-|\+)\s*\\d?frac\&#123;(.+)\&#125;\&#123;(.+)\&#125;</span><br></pre></td></tr></table></figure><p><img src="https://image-1257720033.cos.ap-shanghai.myqcloud.com/blog/latex/mytools/tongfen/pipei.png" alt=""></p><h2 id="替换正则"><a href="#替换正则" class="headerlink" title="替换正则"></a>替换正则</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$1&#123;($2)($6)$4($5)($3)&#125;&#123;($3)($6)&#125;</span><br></pre></td></tr></table></figure><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><h3 id="两个分式的和通分"><a href="#两个分式的和通分" class="headerlink" title="两个分式的和通分"></a>两个分式的和通分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\dfrac&#123;x^3&#125;&#123;x^2+1&#125;+\dfrac&#123;x^2&#125;&#123;x+1&#125;</span><br></pre></td></tr></table></figure><p>$\dfrac{x^3}{x^2+1}+\dfrac{x^2}{x+1}$<br>结果:$\dfrac{(x^3)(x+1)+(x^2)(x^2+1)}{(x^2+1)(x+1)}$</p><h3 id="分子带分式的情况"><a href="#分子带分式的情况" class="headerlink" title="分子带分式的情况"></a>分子带分式的情况</h3><p>分子分母可能还有分式,如下所示:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\dfrac&#123;x^&#123;\dfrac&#123;1&#125;&#123;2&#125;&#125;&#125;&#123;x^2&#125;+\dfrac&#123;x^&#123;\dfrac&#123;1&#125;&#123;3&#125;&#125;&#125;&#123;x^3&#125;</span><br></pre></td></tr></table></figure></p><p>显示修改:<br>$\dfrac{x^{\dfrac{1}{2}}}{x^2}+\dfrac{x^{\dfrac{1}{3}}}{x^3}$<br>运行结果:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\dfrac&#123;(x^&#123;\dfrac&#123;1&#125;&#123;2&#125;&#125;)(x^3)+(x^&#123;\dfrac&#123;1&#125;&#123;3&#125;&#125;)(x^2)&#125;&#123;(x^2)(x^3)&#125;</span><br></pre></td></tr></table></figure></p><p>显示效果:<br>$\dfrac{(x^{\dfrac{1}{2}})(x^3)+(x^{\dfrac{1}{3}})(x^2)}{(x^2)(x^3)}$</p><p>这个这样实现并不完美，不能满复杂的分式。先这样用吧，后续用到了的话再改进</p><blockquote><p>本文链接: <a href="https://lanlan234.github.io/blog/8160885a/" target="_blank" rel="noopener">Latex分式通分</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/blog/8160885a/#latex-分式通分算法&quot;&gt;latex 分式通分算法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/blog/8160885a/#数学知识&quot;&gt;数学知识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/blog/8160885a/#问题描述&quot;&gt;问题描述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/blog/8160885a/#匹配正则&quot;&gt;匹配正则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/blog/8160885a/#替换正则&quot;&gt;替换正则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/blog/8160885a/#例子&quot;&gt;例子&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/blog/8160885a/#两个分式的和通分&quot;&gt;两个分式的和通分&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/blog/8160885a/#分子带分式的情况&quot;&gt;分子带分式的情况&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="我的工具软件" scheme="https://xiaolan234.github.io/categories/%E6%88%91%E7%9A%84%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>HTML笔试题</title>
    <link href="https://xiaolan234.github.io/blog/b0c73433/"/>
    <id>https://xiaolan234.github.io/blog/b0c73433/</id>
    <published>2018-11-24T14:56:31.000Z</published>
    <updated>2018-11-29T18:02:15.237Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://lanlan234.github.io/blog/b0c73433/#放在HTML里的哪一部分JavaScripts会在页面加载的时候被执行？" target="_blank" rel="noopener">放在HTML里的哪一部分JavaScripts会在页面加载的时候被执行？</a></li><li><a href="https://lanlan234.github.io/blog/b0c73433/#下面span标签中Hello-World字体的颜色是" target="_blank" rel="noopener">下面span标签中Hello World字体的颜色是</a></li><li><a href="https://lanlan234.github.io/blog/b0c73433/#要运用css3动画，你需要运用什么规则？" target="_blank" rel="noopener">要运用css3动画，你需要运用什么规则？</a></li><li><a href="https://lanlan234.github.io/blog/b0c73433/#当margin-top、padding-top的值是百分比时，分别是如何计算的？" target="_blank" rel="noopener">当margin-top、padding-top的值是百分比时，分别是如何计算的？</a></li><li><a href="https://lanlan234.github.io/blog/b0c73433/#默认情况下，以下哪些元素时行内元素" target="_blank" rel="noopener">默认情况下，以下哪些元素时行内元素</a></li><li><a href="https://lanlan234.github.io/blog/b0c73433/#下列哪些功能可以通过Cookie来实现？" target="_blank" rel="noopener">下列哪些功能可以通过Cookie来实现？</a></li></ul><a id="more"></a><p><table><tr><td><input type="button" value="显示目录" onclick="displayTOC()"></td><td><input type="button" value="隐藏目录" onclick=" hideTOC()"></td></tr></table></p><script>    function displayTOC(){document.querySelector(".post-body > ul").style.display = "block";}    function hideTOC(){document.querySelector(".post-body > ul").style.display = "none";}    (function (){document.querySelector(".post-body > ul").style.display = "none";})();</script><h2 id="放在HTML里的哪一部分JavaScripts会在页面加载的时候被执行？"><a href="#放在HTML里的哪一部分JavaScripts会在页面加载的时候被执行？" class="headerlink" title="放在HTML里的哪一部分JavaScripts会在页面加载的时候被执行？"></a>放在HTML里的哪一部分JavaScripts会在页面加载的时候被执行？</h2><blockquote><p>在HTML body部分中的JavaScripts会在页面加载的时候被执行。<br>在HTML head部分中的JavaScripts会在被调用的时候才执行。</p><p>head 部分中的脚本: 需调用才执行的脚本或事件触发执行的脚本放在HTML的head部分中。当你把脚本放在head部分中时，可以保证脚本在任何调用之前被加载。<br>body 部分中的脚本: 当页面被加载时执行的脚本放在HTML的body部分。放在body部分的脚本通常被用来生成页面的内容。 </p></blockquote><h2 id="下面span标签中Hello-World字体的颜色是"><a href="#下面span标签中Hello-World字体的颜色是" class="headerlink" title="下面span标签中Hello World字体的颜色是"></a>下面span标签中Hello World字体的颜色是</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">span &#123;</span></span><br><span class="line"><span class="undefined">    color: green;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">.red &#123;</span></span><br><span class="line"><span class="undefined">    color: red;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#blue &#123;</span></span><br><span class="line"><span class="undefined">    color: blue;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"blue"</span> <span class="attr">class</span>=<span class="string">"red"</span> <span class="attr">style</span>=<span class="string">"color:black;"</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这题考察CSS选择器权重：</p><ul><li>内联 权重1000 ， </li><li>ID 选择器 权重：100， </li><li>类 伪类 属性选择器 权重：10 ，</li><li>类型选择器 权重：1 </li><li>important 最大，内联权重次之 除!important ，内联权重最大！</li></ul><p>第一等：代表内联样式，如: style=””，权值为1000。 第二等：代表ID选择器，如：#content，权值为0100。 第三等：代表类，伪类和属性选择器，如.content，权值为0010。 第四等：代表类型选择器和伪元素选择器，如div p，权值为0001。 通配符、子选择器、相邻选择器等的。如*、&gt;、+,权值为0000。 继承的样式没有权值。</p><h2 id="要运用css3动画，你需要运用什么规则？"><a href="#要运用css3动画，你需要运用什么规则？" class="headerlink" title="要运用css3动画，你需要运用什么规则？"></a>要运用css3动画，你需要运用什么规则？</h2><p>要运用css3动画，需要运用@keyframes规则和animation属性</p><h2 id="当margin-top、padding-top的值是百分比时，分别是如何计算的？"><a href="#当margin-top、padding-top的值是百分比时，分别是如何计算的？" class="headerlink" title="当margin-top、padding-top的值是百分比时，分别是如何计算的？"></a>当margin-top、padding-top的值是百分比时，分别是如何计算的？</h2><blockquote><p>相对最近父级块级元素的width，相对最近父级块级元素的width<br> 可以对元素的margin设置百分数，百分数是相对于父元素的width计算，不管是margin-top/margin-bottom还是margin-left/margin-right。（padding同理）</p><p>如果没有为元素声明width，在这种情况下，元素框的总宽度包括外边距取决于父元素的width，这样可能得到“流式”页面，即元素的外边距会扩大或缩小以适应父元素的实际大小。如果对这个文档设置样式，使其元素使用百分数外边距，当用户修改浏览窗口的宽度时，外边距会随之扩大或缩小。 </p></blockquote><h2 id="默认情况下，以下哪些元素时行内元素"><a href="#默认情况下，以下哪些元素时行内元素" class="headerlink" title="默认情况下，以下哪些元素时行内元素"></a>默认情况下，以下哪些元素时行内元素</h2><blockquote><p>常见的块级元素(自动换行， 可设置高宽 )有：<br>       div,h1-h6,p,pre,ul,ol,li,form,table,label等<br>常见的<code>行内元素</code>（无法自动换行，无法设置宽高）有：<br>       a,img,span，i（斜体）,em（强调）,sub(下标)，sup（上标）等。<br>常见的行块级元素(拥有内在尺寸，可设置高宽，不会自动换行 )有：<br>     (button,input，textarea,select), img等</p></blockquote><h2 id="下列哪些功能可以通过Cookie来实现？"><a href="#下列哪些功能可以通过Cookie来实现？" class="headerlink" title="下列哪些功能可以通过Cookie来实现？"></a>下列哪些功能可以通过Cookie来实现？</h2><p><ol type="A"><li>记录访问者的信息</li><li>在页面之间传递信息</li><li>自动识别用户</li><li>对数据库进行操作</li></ol>正确答案: A B C<br><strong>解答</strong></p><blockquote><p>A 项，访问者的信息一般都可以处理成 kv 键值对的形式，故可以保存在 Cookie 中，正确。<br>B 项，通过设置 Cookie 的 path 等属性，可以在特定域名或 URI 下共享 Cookie 信息，正确。<br>C 项，通过在 Cookie 中保存用户uid、服务器会话sid等方法，可以记录用户登录状态，正确。<br>D 项，<strong>Cookie 是保存在用户浏览器上的小文本文件，不是数据库</strong>，也没有提供操作数据库的 API，故此项错误。</p></blockquote><blockquote><p>cookies<code>一般是用于自动登录呀</code>(如淘宝,京东一些可以勾选自动登录),这就相当于进行从登录页到主页的跳转了,页面之间传递着用户的信息<code>,以键值对的方式存储着用户的信息</code>,当然登录跳转也用到了其他以键值对存储的信息,如session(服务端保持,一些需要登录以后才可以访问的就需要session校验,如果是大项目开发的话会用到过滤器) cookies主要用于客户端保持,当然了,cookies怎么可能对数据库进行操作呢,cookies是保存在客户端的. </p></blockquote><p>以上信息来自<a href="https://www.nowcoder.com/" target="_blank" rel="noopener">牛客网</a></p><p>本文链接: <a href="https://lanlan234.github.io/blog/b0c73433/" target="_blank" rel="noopener">HTML笔试题</a></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lanlan234.github.io/blog/b0c73433/#放在HTML里的哪一部分JavaScripts会在页面加载的时候被执行？&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;放在HTML里的哪一部分JavaScripts会在页面加载的时候被执行？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lanlan234.github.io/blog/b0c73433/#下面span标签中Hello-World字体的颜色是&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下面span标签中Hello World字体的颜色是&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lanlan234.github.io/blog/b0c73433/#要运用css3动画，你需要运用什么规则？&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;要运用css3动画，你需要运用什么规则？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lanlan234.github.io/blog/b0c73433/#当margin-top、padding-top的值是百分比时，分别是如何计算的？&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;当margin-top、padding-top的值是百分比时，分别是如何计算的？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lanlan234.github.io/blog/b0c73433/#默认情况下，以下哪些元素时行内元素&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;默认情况下，以下哪些元素时行内元素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lanlan234.github.io/blog/b0c73433/#下列哪些功能可以通过Cookie来实现？&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下列哪些功能可以通过Cookie来实现？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="笔试题" scheme="https://xiaolan234.github.io/categories/%E7%AC%94%E8%AF%95%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>latex语句生成</title>
    <link href="https://xiaolan234.github.io/blog/27df4079/"/>
    <id>https://xiaolan234.github.io/blog/27df4079/</id>
    <published>2018-11-21T04:10:10.236Z</published>
    <updated>2018-12-18T09:04:00.649Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://xiaolan233.github.io/blog/27df4079/#添加latex公式标记" target="_blank" rel="noopener">添加latex公式标记</a><ul><li><a href="https://xiaolan233.github.io/blog/27df4079/#行内公式" target="_blank" rel="noopener">行内公式</a></li><li><a href="https://xiaolan233.github.io/blog/27df4079/#行间公式" target="_blank" rel="noopener">行间公式</a></li></ul></li><li><a href="https://xiaolan233.github.io/blog/27df4079/#生成latex多行公式指令不自动编号" target="_blank" rel="noopener">生成latex多行公式指令不自动编号</a><ul><li><a href="https://xiaolan233.github.io/blog/27df4079/#问题描述" target="_blank" rel="noopener">问题描述</a></li><li><a href="https://xiaolan233.github.io/blog/27df4079/#java实现" target="_blank" rel="noopener">java实现</a><ul><li><a href="https://xiaolan233.github.io/blog/27df4079/#程序输入" target="_blank" rel="noopener">程序输入</a></li><li><a href="https://xiaolan233.github.io/blog/27df4079/#运行结果" target="_blank" rel="noopener">运行结果</a></li></ul></li></ul></li></ul><a id="more"></a><blockquote><p>记得有一句话:软件开发的本质就是把复杂的东西简单化，简单的东西自动化。</p></blockquote><p>latex语句繁多，容易忘掉，还是自己写代码自动生成的好，实现代码如下。</p><h1 id="添加latex公式标记"><a href="#添加latex公式标记" class="headerlink" title="添加latex公式标记"></a>添加latex公式标记</h1><h2 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h2><p>行内公式直接在公式两边添加各自添加一个美元符号即可，如<code>f(x)=1+x</code>,行内公式为<code>$f(x)=1+x$</code>,显示效果$f(x)=1+x$。</p><h2 id="行间公式"><a href="#行间公式" class="headerlink" title="行间公式"></a>行间公式</h2><p>行间公式在公式两边搁置添加两个美元符号即可，行间公式会显示在新行，并且居中对齐。如<code>f(x)=1+x</code>,行内公式为<code>$$f(x)=1+x$$</code>,显示效果$$f(x)=1+x$$。</p><h1 id="生成latex多行公式指令不自动编号"><a href="#生成latex多行公式指令不自动编号" class="headerlink" title="生成latex多行公式指令不自动编号"></a>生成latex多行公式指令不自动编号</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>把下面的多行公式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(a + b)^3 = (a + b) (a + b)^2</span><br><span class="line">            = (a + b)(a^2 + 2ab + b^2)</span><br><span class="line">            = a^3 + 3a^2b + 3ab^2 + b^3</span><br></pre></td></tr></table></figure></p><p>转成latex形式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;align&#125;</span><br><span class="line">  (a + b)^3 &amp;= (a + b) (a + b)^2 \nonumber \\</span><br><span class="line">             &amp;= (a + b)(a^2 + 2ab + b^2) \nonumber \\</span><br><span class="line">             &amp;= a^3 + 3a^2b + 3ab^2 + b^3\nonumber\\</span><br><span class="line">\end&#123;align&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><p>$$<br>\begin{align}<br> (a + b)^3 &amp;= (a + b) (a + b)^2 \nonumber \\<br>             &amp;= (a + b)(a^2 + 2ab + b^2) \nonumber \\<br>             &amp;= a^3 + 3a^2b + 3ab^2 + b^3 \nonumber \\<br>\end{align}<br>$$</p><h2 id="java实现"><a href="#java实现" class="headerlink" title="java实现"></a>java实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getAlign</span><span class="params">(String text)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//\begin&#123;align&#125;</span></span><br><span class="line"><span class="comment">//f(-x)+f(x)&amp;=ln(\sqrt&#123;1+x^2&#125;+x)+ln(\sqrt&#123;1+x^2&#125;-x)\nonumber\\</span></span><br><span class="line"><span class="comment">//&amp;=ln[(\sqrt&#123;1+x^2&#125;+x)(\sqrt&#123;1+x^2&#125;-x)]\nonumber\\</span></span><br><span class="line"><span class="comment">//&amp;=ln(1+x^2-x^2)\nonumber\\</span></span><br><span class="line"><span class="comment">//&amp;=ln1\nonumber\\</span></span><br><span class="line"><span class="comment">//&amp;=0\nonumber</span></span><br><span class="line"><span class="comment">//\end&#123;align&#125;</span></span><br><span class="line"><span class="comment">//使用正则表达式在等号前面加上对齐符号</span></span><br><span class="line">text=text.replaceAll(<span class="string">"="</span>, <span class="string">"&amp;="</span>);</span><br><span class="line"><span class="comment">//使用正则表达式在换行符和字符串末尾添加上latex换行符`\\`--这里四个换行符对应一个反斜杠</span></span><br><span class="line">text=text.replaceAll(<span class="string">"(:?\\n|$)"</span>, <span class="string">" \\\\nonumber \\\\\\\\"</span>+<span class="string">"\n"</span>);</span><br><span class="line"><span class="comment">//加上latex语法头</span></span><br><span class="line">String casecode=<span class="string">"$$\n"</span>+</span><br><span class="line"><span class="string">"\\begin&#123;align&#125;\n"</span>+</span><br><span class="line">text+</span><br><span class="line"><span class="string">"\\end&#123;align&#125;\n"</span>+</span><br><span class="line"><span class="string">"$$"</span>;</span><br><span class="line">System.out.println(casecode);</span><br><span class="line"><span class="keyword">return</span> casecode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="程序输入"><a href="#程序输入" class="headerlink" title="程序输入"></a>程序输入</h3><p>text输入下面的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(a + b)^3 = (a + b) (a + b)^2</span><br><span class="line">            = (a + b)(a^2 + 2ab + b^2)</span><br><span class="line">            = a^3 + 3a^2b + 3ab^2 + b^3</span><br></pre></td></tr></table></figure></p><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;align&#125;</span><br><span class="line"> (a + b)^3 &amp;= (a + b) (a + b)^2 \nonumber \\</span><br><span class="line">             &amp;= (a + b)(a^2 + 2ab + b^2) \nonumber \\</span><br><span class="line">             &amp;= a^3 + 3a^2b + 3ab^2 + b^3 \nonumber \\</span><br><span class="line">\end&#123;align&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>显示效果<br>$$<br>\begin{align}<br> (a + b)^3 &amp;= (a + b) (a + b)^2 \nonumber \\<br>             &amp;= (a + b)(a^2 + 2ab + b^2) \nonumber \\<br>             &amp;= a^3 + 3a^2b + 3ab^2 + b^3 \nonumber \\<br>\end{align}<br>$$</p><p>本文链接: <a href="https://xiaolan233.github.io/blog/27df4079/" target="_blank" rel="noopener">latex语句生成</a></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://xiaolan233.github.io/blog/27df4079/#添加latex公式标记&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;添加latex公式标记&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://xiaolan233.github.io/blog/27df4079/#行内公式&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;行内公式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://xiaolan233.github.io/blog/27df4079/#行间公式&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;行间公式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://xiaolan233.github.io/blog/27df4079/#生成latex多行公式指令不自动编号&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;生成latex多行公式指令不自动编号&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://xiaolan233.github.io/blog/27df4079/#问题描述&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;问题描述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://xiaolan233.github.io/blog/27df4079/#java实现&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;java实现&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://xiaolan233.github.io/blog/27df4079/#程序输入&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;程序输入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://xiaolan233.github.io/blog/27df4079/#运行结果&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;运行结果&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="我的工具软件" scheme="https://xiaolan234.github.io/categories/%E6%88%91%E7%9A%84%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6/"/>
    
    
  </entry>
  
</feed>
