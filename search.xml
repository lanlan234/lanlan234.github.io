<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[写一个程序判断二次方程是否满足十字交叉法]]></title>
    <url>%2Fblog%2F945363eb%2F</url>
    <content type="text"><![CDATA[判断二次方程是否满足十字相乘法 十字相乘法算法描述 如何把一个数分成两个数的乘积 初步实现 &nbsp; function open_closeTOC() {var id = document.querySelector(".post-body > ul"); if (id.style.display == "block") {id.style.display = "none";document.getElementById("showcloseButton").value= "展开目录";}else if (id.style.display == "none") {id.style.display = "block";document.getElementById("showcloseButton").value="折叠目录";}}(function () {document.querySelector(".post-body > ul").style.display = "none";document.getElementById("showcloseButton").value="展开目录";})(); function copyPageURL() {const input = document.createElement('input');input.setAttribute('readonly', 'readonly');input.setAttribute('value', window.location.href);document.body.appendChild(input); input.select();if (document.execCommand("copy")) {alert("已复制: " + input.value)} document.body.removeChild(input);} 判断二次方程是否满足十字相乘法一元二次方程:$ax^2+bx+c$ 十字相乘法算法描述 首先把系数a分成两个数$a_1\times a_2$的乘积形式，c分成两个数$c_1\times c_2$的乘积形式 如果$a_1\times c_2+a_1\times c_1=b$则满足十字交叉法 把公式写成$(a_1x+c_1)(a_2x+c_2)$即可 如何把一个数分成两个数的乘积如把常系数$c$分成$c_1\times c_2$时，我可以先取$c_1=1$,则$c_2=c \div c_1$ 初步实现java代码如下:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141package yiyuanercifangcheng;import java.util.regex.Matcher;import java.util.regex.Pattern;public class Test&#123; public static void main(String[] args) &#123; // String text="ax^2+bx+c"; // String text = "x^2+3x-4"; // String text = "x^2+4x+4"; // String text = "x^2+10x+25"; // String text = "x^2-10x+25"; // String text = "x^2+8x+16"; String text = "x^2-8x+16"; System.out.println("二次方程:" + text); Pattern fun = Pattern.compile("(.*?)x\\^2(.*?)x(.*?)"); Matcher matcher = fun.matcher(text); int[] a = new int[3]; int b = 0; int[] c = new int[3]; // a是否已经分解 boolean isADiv = false; // C是否已经分解 boolean isCDiv = false; if (matcher.matches()) &#123; String astr = matcher.group(1), bstr = matcher.group(2), cstr = matcher.group(3); // 如果有正号则移除正号 bstr = bstr.replaceAll("\\+", ""); // 如果有正号则移除正号 cstr = cstr.replaceAll("\\+", ""); // 这说明系数1忽略没有写 if (astr == null || astr.equals("")) &#123; a[0] = 1; a[1] = 1; a[2] = 1; isADiv = true; &#125; else &#123; a[0] = Integer.parseInt(astr); &#125; // 这说明系数1忽略没有写 if (bstr == null || bstr.equals("")) &#123; b = 1; &#125; else &#123; b = Integer.parseInt(bstr); &#125; c[0] = Integer.parseInt(cstr); &#125; // a=1的情况 if (isADiv) &#123; for (int i = 1, first = -Math.abs(c[0]), length = 2 * Math.abs(c[0]); i &lt; length; i++) &#123; c[1] = first++; // 跳过分母为0的情况 if (c[1] == 0) continue; c[2] = c[0] / c[1]; // 判断是否能整除 if (c[1] * c[2] == c[0]) &#123; System.out.print("可以整除: " + c[1] + " * " + c[2] + " = " + (c[1] * c[2]) + " =" + c[0]); if ((a[1] * c[2] + a[2] * c[1]) == b) &#123; System.out.print(",(" + a[1] + "*" + c[2] + "+" + a[2] + "*" + c[1] + ")=" + b); System.out.print(",满足十字相乘法: "); System.out.println(printResult(a, c)); // 得到结果,终止循环 break; &#125; System.out.println(); &#125; else &#123; System.out.println("不可整除: " + c[1] + " * " + c[2] + " = " + (c[1] * c[2]) + " !=" + c[0]); // 跳过不能整除的情况 continue; &#125; &#125; &#125; &#125; /** * 拼接公式 * @param a x^2的系数数组 * @param c 常数c的系数数组 * return 拼接好的形如(a_1x+c_1)(a_2x+c_2)公式 */ public static String printResult(int[] a, int[] c) &#123; StringBuffer sb = new StringBuffer(); sb.append("("); // 如果系数是1或者-1 if (Math.abs(a[1]) == 1) &#123; // 如果是-1则显示负号 if (a[1] == -1) &#123; sb.append("-"); &#125; // 如果是+1则什么都不显示 &#125; else &#123; sb.append(a[1]); &#125; sb.append("x"); if (c[1] &gt;= 0) &#123; System.out.print("+"); sb.append("+"); &#125; sb.append(c[1] + ")("); // 如果系数是1或者-1 if (Math.abs(a[1]) == 1) &#123; // 如果是-1则显示负号 if (a[1] == -1) &#123; sb.append("-"); &#125; // 如果是+1则什么都不显示 &#125; else &#123; sb.append(a[1]); &#125; sb.append("x"); if (c[2] &gt;= 0) &#123; sb.append("+"); &#125; sb.append(c[2] + ")"); return sb.toString(); &#125;&#125; 这个代码只能满足a=1的情况,a!=1的情况我还没想好怎么弄,可能需要先对A来一个循环, 本文链接: 写一个程序判断二次方程是否满足十字交叉法]]></content>
      <categories>
        <category>我的工具软件</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Latex分式通分]]></title>
    <url>%2Fblog%2F8160885a%2F</url>
    <content type="text"><![CDATA[latex 分式通分算法 数学知识 问题描述 匹配正则 替换正则 例子 两个分式的和通分 分子带分式的情况 &nbsp; function open_closeTOC() {var id = document.querySelector(".post-body > ul"); if (id.style.display == "block") {id.style.display = "none";document.getElementById("showcloseButton").value= "展开目录";}else if (id.style.display == "none") {id.style.display = "block";document.getElementById("showcloseButton").value="折叠目录";}}(function () {document.querySelector(".post-body > ul").style.display = "none";document.getElementById("showcloseButton").value="展开目录";})(); function copyPageURL() {const input = document.createElement('input');input.setAttribute('readonly', 'readonly');input.setAttribute('value', window.location.href);document.body.appendChild(input); input.select();if (document.execCommand("copy")) {alert("已复制: " + input.value)} document.body.removeChild(input);} latex 分式通分算法数学知识通分（reduction of fractions to a common denominator）根据分数（式）的基本性质，把几个异分母分数（式）化成与原来分数（式）相等的同分母的分数（式）的过程，叫做通分 问题描述有如下公式:1\dfrac&#123;x^3&#125;&#123;x^2+1&#125;-\dfrac&#123;x^2&#125;&#123;x+1&#125; $\dfrac{x^3}{x^2+1}-\dfrac{x^2}{x+1}$要求生成通分运算后的latex公式1\dfrac&#123;(x^3)(x+1)-(x^2)(x^2+1)&#125;&#123;(x^2+1)(x+1)&#125; $\dfrac{(x^3)(x+1)-(x^2)(x^2+1)}{(x^2+1)(x+1)}$ 匹配正则1(\\d?frac)\&#123;(.+)\&#125;\&#123;(.+)\&#125;\s*(\-|\+)\s*\\d?frac\&#123;(.+)\&#125;\&#123;(.+)\&#125; 替换正则1$1&#123;($2)($6)$4($5)($3)&#125;&#123;($3)($6)&#125; 例子两个分式的和通分1\dfrac&#123;x^3&#125;&#123;x^2+1&#125;+\dfrac&#123;x^2&#125;&#123;x+1&#125; $\dfrac{x^3}{x^2+1}+\dfrac{x^2}{x+1}$结果:$\dfrac{(x^3)(x+1)+(x^2)(x^2+1)}{(x^2+1)(x+1)}$ 分子带分式的情况分子分母可能还有分式,如下所示:1\dfrac&#123;x^&#123;\dfrac&#123;1&#125;&#123;2&#125;&#125;&#125;&#123;x^2&#125;+\dfrac&#123;x^&#123;\dfrac&#123;1&#125;&#123;3&#125;&#125;&#125;&#123;x^3&#125; 显示修改:$\dfrac{x^{\dfrac{1}{2}}}{x^2}+\dfrac{x^{\dfrac{1}{3}}}{x^3}$运行结果:1\dfrac&#123;(x^&#123;\dfrac&#123;1&#125;&#123;2&#125;&#125;)(x^3)+(x^&#123;\dfrac&#123;1&#125;&#123;3&#125;&#125;)(x^2)&#125;&#123;(x^2)(x^3)&#125; 显示效果:$\dfrac{(x^{\dfrac{1}{2}})(x^3)+(x^{\dfrac{1}{3}})(x^2)}{(x^2)(x^3)}$ 这个这样实现并不完美，不能满复杂的分式。先这样用吧，后续用到了的话再改进 本文链接: Latex分式通分]]></content>
      <categories>
        <category>我的工具软件</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[HTML笔试题]]></title>
    <url>%2Fblog%2Fb0c73433%2F</url>
    <content type="text"><![CDATA[放在HTML里的哪一部分JavaScripts会在页面加载的时候被执行？ 下面span标签中Hello World字体的颜色是 要运用css3动画，你需要运用什么规则？ 当margin-top、padding-top的值是百分比时，分别是如何计算的？ 默认情况下，以下哪些元素时行内元素 下列哪些功能可以通过Cookie来实现？ function displayTOC(){document.querySelector(".post-body > ul").style.display = "block";} function hideTOC(){document.querySelector(".post-body > ul").style.display = "none";} (function (){document.querySelector(".post-body > ul").style.display = "none";})(); 放在HTML里的哪一部分JavaScripts会在页面加载的时候被执行？ 在HTML body部分中的JavaScripts会在页面加载的时候被执行。在HTML head部分中的JavaScripts会在被调用的时候才执行。 head 部分中的脚本: 需调用才执行的脚本或事件触发执行的脚本放在HTML的head部分中。当你把脚本放在head部分中时，可以保证脚本在任何调用之前被加载。body 部分中的脚本: 当页面被加载时执行的脚本放在HTML的body部分。放在body部分的脚本通常被用来生成页面的内容。 下面span标签中Hello World字体的颜色是123456789101112&lt;style type="text/css"&gt;span &#123; color: green;&#125;.red &#123; color: red;&#125;#blue &#123; color: blue;&#125;&lt;/style&gt;&lt;span id="blue" class="red" style="color:black;"&gt;Hello World&lt;/span&gt; 这题考察CSS选择器权重： 内联 权重1000 ， ID 选择器 权重：100， 类 伪类 属性选择器 权重：10 ， 类型选择器 权重：1 important 最大，内联权重次之 除!important ，内联权重最大！ 第一等：代表内联样式，如: style=””，权值为1000。 第二等：代表ID选择器，如：#content，权值为0100。 第三等：代表类，伪类和属性选择器，如.content，权值为0010。 第四等：代表类型选择器和伪元素选择器，如div p，权值为0001。 通配符、子选择器、相邻选择器等的。如*、&gt;、+,权值为0000。 继承的样式没有权值。 要运用css3动画，你需要运用什么规则？要运用css3动画，需要运用@keyframes规则和animation属性 当margin-top、padding-top的值是百分比时，分别是如何计算的？ 相对最近父级块级元素的width，相对最近父级块级元素的width 可以对元素的margin设置百分数，百分数是相对于父元素的width计算，不管是margin-top/margin-bottom还是margin-left/margin-right。（padding同理） 如果没有为元素声明width，在这种情况下，元素框的总宽度包括外边距取决于父元素的width，这样可能得到“流式”页面，即元素的外边距会扩大或缩小以适应父元素的实际大小。如果对这个文档设置样式，使其元素使用百分数外边距，当用户修改浏览窗口的宽度时，外边距会随之扩大或缩小。 默认情况下，以下哪些元素时行内元素 常见的块级元素(自动换行， 可设置高宽 )有： div,h1-h6,p,pre,ul,ol,li,form,table,label等常见的行内元素（无法自动换行，无法设置宽高）有： a,img,span，i（斜体）,em（强调）,sub(下标)，sup（上标）等。常见的行块级元素(拥有内在尺寸，可设置高宽，不会自动换行 )有： (button,input，textarea,select), img等 下列哪些功能可以通过Cookie来实现？记录访问者的信息在页面之间传递信息自动识别用户对数据库进行操作正确答案: A B C解答 A 项，访问者的信息一般都可以处理成 kv 键值对的形式，故可以保存在 Cookie 中，正确。B 项，通过设置 Cookie 的 path 等属性，可以在特定域名或 URI 下共享 Cookie 信息，正确。C 项，通过在 Cookie 中保存用户uid、服务器会话sid等方法，可以记录用户登录状态，正确。D 项，Cookie 是保存在用户浏览器上的小文本文件，不是数据库，也没有提供操作数据库的 API，故此项错误。 cookies一般是用于自动登录呀(如淘宝,京东一些可以勾选自动登录),这就相当于进行从登录页到主页的跳转了,页面之间传递着用户的信息,以键值对的方式存储着用户的信息,当然登录跳转也用到了其他以键值对存储的信息,如session(服务端保持,一些需要登录以后才可以访问的就需要session校验,如果是大项目开发的话会用到过滤器) cookies主要用于客户端保持,当然了,cookies怎么可能对数据库进行操作呢,cookies是保存在客户端的. 以上信息来自牛客网 本文链接: HTML笔试题]]></content>
      <categories>
        <category>笔试题</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[latex语句生成]]></title>
    <url>%2Fblog%2F27df4079%2F</url>
    <content type="text"><![CDATA[添加latex公式标记 行内公式 行间公式 生成latex多行公式指令不自动编号 问题描述 java实现 程序输入 运行结果 记得有一句话:软件开发的本质就是把复杂的东西简单化，简单的东西自动化。 latex语句繁多，容易忘掉，还是自己写代码自动生成的好，实现代码如下。 添加latex公式标记行内公式行内公式直接在公式两边添加各自添加一个美元符号即可，如f(x)=1+x,行内公式为$f(x)=1+x$,显示效果$f(x)=1+x$。 行间公式行间公式在公式两边搁置添加两个美元符号即可，行间公式会显示在新行，并且居中对齐。如f(x)=1+x,行内公式为$$f(x)=1+x$$,显示效果$$f(x)=1+x$$。 生成latex多行公式指令不自动编号问题描述把下面的多行公式123(a + b)^3 = (a + b) (a + b)^2 = (a + b)(a^2 + 2ab + b^2) = a^3 + 3a^2b + 3ab^2 + b^3 转成latex形式：1234567$$\begin&#123;align&#125; (a + b)^3 &amp;= (a + b) (a + b)^2 \nonumber \\ &amp;= (a + b)(a^2 + 2ab + b^2) \nonumber \\ &amp;= a^3 + 3a^2b + 3ab^2 + b^3\nonumber\\\end&#123;align&#125;$$ 显示效果： $$\begin{align} (a + b)^3 &amp;= (a + b) (a + b)^2 \nonumber \\ &amp;= (a + b)(a^2 + 2ab + b^2) \nonumber \\ &amp;= a^3 + 3a^2b + 3ab^2 + b^3 \nonumber \\\end{align}$$ java实现12345678910111213141516171819202122 public static String getAlign(String text) &#123;// \begin&#123;align&#125;// f(-x)+f(x)&amp;=ln(\sqrt&#123;1+x^2&#125;+x)+ln(\sqrt&#123;1+x^2&#125;-x)\nonumber\\// &amp;=ln[(\sqrt&#123;1+x^2&#125;+x)(\sqrt&#123;1+x^2&#125;-x)]\nonumber\\// &amp;=ln(1+x^2-x^2)\nonumber\\// &amp;=ln1\nonumber\\// &amp;=0\nonumber// \end&#123;align&#125; //使用正则表达式在等号前面加上对齐符号 text=text.replaceAll("=", "&amp;="); //使用正则表达式在换行符和字符串末尾添加上latex换行符`\\`--这里四个换行符对应一个反斜杠 text=text.replaceAll("(:?\\n|$)", " \\\\nonumber \\\\\\\\"+"\n"); //加上latex语法头 String casecode="$$\n"+ "\\begin&#123;align&#125;\n"+ text+ "\\end&#123;align&#125;\n"+ "$$"; System.out.println(casecode); return casecode; &#125; 程序输入text输入下面的代码：123(a + b)^3 = (a + b) (a + b)^2 = (a + b)(a^2 + 2ab + b^2) = a^3 + 3a^2b + 3ab^2 + b^3 运行结果1234567$$\begin&#123;align&#125; (a + b)^3 &amp;= (a + b) (a + b)^2 \nonumber \\ &amp;= (a + b)(a^2 + 2ab + b^2) \nonumber \\ &amp;= a^3 + 3a^2b + 3ab^2 + b^3 \nonumber \\\end&#123;align&#125;$$ 显示效果$$\begin{align} (a + b)^3 &amp;= (a + b) (a + b)^2 \nonumber \\ &amp;= (a + b)(a^2 + 2ab + b^2) \nonumber \\ &amp;= a^3 + 3a^2b + 3ab^2 + b^3 \nonumber \\\end{align}$$ 本文链接: latex语句生成]]></content>
      <categories>
        <category>我的工具软件</category>
      </categories>
  </entry>
</search>
